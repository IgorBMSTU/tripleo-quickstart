# Deploy an Openstack environment with a containerized overcloud
# using scenario002

undercloud_setup: true
network_isolation: false
overcloud_ipv6: false

# pacemaker settings are configured in the scenario template
# do not set `enable_pacemaker` in the featureset

containerized_overcloud: true
undercloud_generate_service_certificate: false

ssl_overcloud: false

step_introspect: false

composable_scenario: scenario002-multinode-containers.yaml
validate_template: scenario002-multinode.yaml
deployed_server: true

# options below direct automatic doc generation by tripleo-collect-logs
artcl_gen_docs: true
artcl_create_docs_payload:
  included_deployment_scripts:
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - "{% if run_tempest|bool -%}tempest-setup{%- endif -%}"
    - "{% if run_tempest|bool and tempest_format|default('packages') == 'containers' -%}tempest_container{%- endif -%}"
    - overcloud-validate
  included_static_docs:
    - env-setup-virt
  table_of_contents:
    - env-setup-virt
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - overcloud-validate
    - "{% if run_tempest|bool -%}tempest-setup{%- endif -%}"
    - "{% if run_tempest|bool and tempest_format|default('packages') == 'containers' -%}tempest_container{%- endif -%}"
composable_roles: true
overcloud_roles:
  - name: Controller
    CountDefault: 1
    tags:
      - primary
      - controller
    networks:
      - External
      - InternalApi
      - Storage
      - StorageMgmt
      - Tenant

# Use the traditional ping test in newton and ocata
# Run tempest in pike+

test_ping: >-
  {% if release in ['newton', 'ocata'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}

run_tempest: >-
  {% if release in ['newton', 'ocata'] -%}
  false
  {%- else -%}
  true
  {%- endif -%}

test_white_regex: ''
# Run containerized tempest from master and ongoing
tempest_format: >-
  {% if release not in ['newton', 'ocata', 'pike', 'queens'] -%}
  container
  {%- else -%}
  packages
  {%- endif -%}

# TODO(emilien) run ec2api tests when ec2api is supported in python-tempestconf
# 'ec2api.tests.functional.api.test_key_pairs.KeyPairTest'
tempest_whitelist_new:
  - "tempest.api.object_storage.test_object_services.ObjectTest"
  - "barbican_tempest_plugin.tests.scenario.test_volume_encryption.VolumeEncryptionTest"
  - "telemetry_tempest_plugin.scenario.test_telemetry_integration.TestTelemetryIntegration"
tempest_whitelist_old:
  - "tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_volume_boot_pattern"
  - "tempest.api.object_storage.test_object_services.ObjectTest"
tempest_whitelist: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}{{ tempest_whitelist_new }}
  {%- else -%}{{ tempest_whitelist_old }}
  {%- endif -%}

tempest_plugins_old:
  - python-aodh-tests
  - python-ceilometer-tests
  - python-gnocchi-tests
  - python-panko-tests
  - python-barbican-tests-tempest
  - python-zaqar-tests
  - python-ec2-api-tests
tempest_plugins_new:
  - python-telemetry-tests-tempest
  - python-barbican-tests-tempest
  - python-zaqar-tests-tempest
  - python-ec2api-tests-tempest
  - python-heat-tests-tempest
tempest_plugins: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}{{ tempest_plugins_new }}
  {%- else -%}{{ tempest_plugins_old }}
  {%- endif -%}
tempest_extra_config: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}
    {'compute-feature-enabled.attach_encrypted_volume': 'True', 'auth.tempest_roles': '"Member, creator"', 'telemetry.alarm_granularity': '60'}
  {%- endif -%}

# This is a workaround to have test_volume_boot_pattern passing, it's failing
# due a concurrency, for more information, check lp 1744151
tempest_workers: 1

deployed_server: >-
  {% if release in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}
deploy_steps_ansible_workflow: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}
config_download_args: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  -e {{ working_dir }}/config-download.yaml
  --disable-validations
  --verbose
  {%- endif -%}
